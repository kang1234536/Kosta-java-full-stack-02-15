//2월 17일 내용들! 참조타입!!
package com.kosta.day03;

public class 참조연습 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//sample();
		//sample2();
		sample3();

	}

private static void sample3() {
		// 참조형은 일반적으로 null로 초기화
		// null: 정의된바가 없다. 참조된값이 없다.
		String s=null;
		System.out.println(s);
		System.out.println(s==null);
		s="이것이 자바다";
		System.out.println(s.length());
		
	}

private static void sample2() {
		//지역변수는 반드시 초기화하고 사용한다 
	int a=0;
	double d=0.0;
	boolean b=false;
	char c=' ';
	System.out.println(a+d);
	System.out.println(b);
	System.out.println(c);
		
	}
  //

	//equals 비교
// System.identityHashcode() 주소값 구하는것!!
	private static void sample() {
		// TODO Auto-generated method stub
		String s1 = "홍길동";
		String s2 = "홍길동";
		String s3 = new String("홍길동님");
		String s4 = new String("홍길동님");
		System.out.println(s1 == s2); // true 주소비교!!
		System.out.println(System.identityHashCode(s1));
		System.out.println(System.identityHashCode(s2));
		s1 = s1 + "님";// 문자열은 변경불가 ....님을 붙이면 주소값이 달라진다
		s2 = s2 + "님";// 문자열은 변경불가
		System.out.println(s1 == s2); // false 주소비교

		System.out.println(s3 == s4); // false 주소비교

		System.out.println(System.identityHashCode(s1));
		System.out.println(System.identityHashCode(s2));
		System.out.println(s1 == s2);
		System.out.println(s1.equals(s4) ? "내용이같다" : "내용이 다르다");
		System.out.println(System.identityHashCode(s3));
		System.out.println(System.identityHashCode(s4));

	}

}
//배열연습
package com.kosta.day03;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.function.IntPredicate;

//배열 : 이름은 하나, 같은종류의 값을 여러개 저장하기 위한 자료구조
package com.kosta.day03;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.function.IntPredicate;

//배열 : 이름은 하나, 같은종류의 값을 여러개 저장하기 위한 자료구조
public class 배열연습 {

	public static void main(String[] args) {//String[] args 이것은 명령행 매개변수!!!
		//명령행 매개변수 == 커맨드라인
//		 >java 배열연습 100 200
//		
		// 함수쓸떄 앞으로 f2+enter누르기!!
			//method1();
			//method2();
			//method3();
			System.out.println(args.length +"개 parameter가 들어옴");
			//System.out.println(args[0]);  0번째값이없다
			System.out.println(args[0]+" "+args[1]); //run configuation에서 설정해서 값을 넣음
			System.out.println(args[0]+args[1]);
			//문자열->숫자로 변경
			//String class = 기능(메서드) + 속성(변수)
			//Integer class = 기능(메서드)+ 속성(변수)
			int su1=Integer.parseInt(args[0]);  //Integer.parseInt는 string을 int로 바꿔줌
			int su2=Integer.parseInt(args[1]);
			System.out.println(Integer.parseInt(args[0])+Integer.parseInt(args[1]));
			System.out.println(su1+su2);
		
			
	}

	private static void method3() {
		// String 배열
		//배열 생성시 갯수는 필수이다.
		//자동초기화, 값은null이된다
		String[] arr = new String[5];
		System.out.println(Arrays.toString(arr)); //값은 null
		String[] arr1 ={"java","sql","html5","css3","javascript"};
		System.out.println(Arrays.toString(arr1));
		String[] arr2;
		arr2 =new String[]{"java","sql","html5","css3","javascript"};
//		String[] arr3; 무조건  String[] 가 있어야한다.
//		arr3={"java","sql","html5","css3","javascript"};
		
//		for(int i =0; i<arr2.length;i++) {
//			System.out.println(arr2[i]);
//		}
//		확장 For, 향상된 for
		for(String s:arr2) {
			System.out.println(s);
		}
	}

	private static void method2() {
		// TODO Auto-generated method stub
		int[] arr;
		arr =new int[10];
		for(int i =0;i<arr.length;i++) {
			System.out.println(i+"번째 : "+arr[i]);
			//arr[i]+=i;
		//	System.out.println("arr[" +i +"]의 값 : " +arr[i]);
		}
		System.out.println(Arrays.toString(arr)); //배열을 []형태로만드는것은 Arrays.toString()이다.
		String[] arr2 =new String[5];
		System.out.println(Arrays.toString(arr2));
		
		//선언+생성 초기화
		int[] arr3 = new int[5];
		int[] arr4 = new int[] {100,99,88,50,10}; //배열의 선언 생성을 동시에
		int[] arr5 = {100,99,88,50,10}; //축소화한것
			System.out.println(Arrays.toString(arr3));
			System.out.println(Arrays.toString(arr4));
			System.out.println(Arrays.toString(arr5));
			
			int total =0;
			for(int i =0; i<arr4.length;i++) {
				total+=arr4[i];
			}
			System.out.println(total);
	}

	private static void method1() {
		// 배열을 사용하기 위해 우선 배열 변수 선언
		// int[] int Array!!
		//1.배열변수선언
		int[] score1;
		double score2[];
		boolean pass[];
		char grade[];
		//2. 배열생성 ....  heap영역에 만들어지는 객체는 자동초기화된다.
		score1=new int[30];  //0
		score2=new double[5]; //0.0
		pass=new boolean[30]; //초기화값 false
		grade=new char[30]; //' '
		//3.배열 사용
		//index(첨자)는 0부터 시작, 30개
		System.out.println(score1.length+"개");
		System.out.println(score2.length+"개");
		
		System.out.println(score1[0]);	
		System.out.println(score2[0]);	
		System.out.println(pass[0]);	
		System.out.println("*"+grade[0]+"*");	
		score1[0]=100;
		score1[1]=99;
		System.out.println(score1[1]);
		
	}
		
	}


//다차원 배열
package com.kosta.day03;

import java.awt.desktop.SystemSleepEvent;
import java.util.Arrays;
import java.util.function.IntPredicate;

public class 다차원배열 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// method1();
		// method2();
		// method3();
		// method4();
		// method5();
		method7();
	}

	// 값의전달.....값을 복사
	private static void method7() {
		int a = 100;
		System.out.println("before " + a);
		method8(a);
		System.err.println("after " + a);

	}

	private static void method8(int a) {
		// TODO Auto-generated method stub
		a = 300;
	}

//주소의 전달  
// 배열은 객체
	private static void method5() {
		//
		int[] arr1 = new int[] { 100, 99, 70, 88, 95 };
		System.out.println("before " + Arrays.toString(arr1)); // before

		method6(arr1);
		// int[] scores =arr1; 복사x 같은주소!!
		System.out.println("after " + Arrays.toString(arr1)); // after

	}

	private static void method6(int[] scores) {
		// TODO Auto-generated method stub
		scores[0] = 300;
		System.out.println(Arrays.toString(scores));
	}

	private static void method4() {
		// 배열은 복사하는 방법이 따로있다.!!
		// 복사방법은 for문 이용,System.arrayCopy()메서드 이용, Arrays클래스이용
		int[] arr1 = new int[] { 100, 99, 70, 88, 95 }; // new int[] 생략가능
		int[] arr2 = new int[arr1.length];
		int[] arr3 = new int[arr1.length];
		System.arraycopy(arr1, 0, arr3, 0, arr1.length); // 복사방법2

		// int[] arr4 =Arrays.copyOf(arr1, 2); //복사방법3
		int[] arr4 = Arrays.copyOf(arr1, arr1.length); // 복사방법3
		System.out.println(Arrays.toString(arr4));
		System.out.println(Arrays.toString(arr3));
		for (int i = 0; i < arr1.length; i++) {// 복사방법1
			arr2[i] = arr1[i];
		}
		arr1[0] = 200; // 이것은 복사이기에 arr1과 arr2의 [0]값은 달라진다.
		System.out.println(Arrays.toString(arr1));
		System.out.println(Arrays.toString(arr2));
	}

	private static void method3() {

		String[][] arr = new String[][] { { "자바", "SQL", "WEB" }, { "HTML5", "CSS3" }, { "A", "B", "C", "D" } };
		for (int row = 0; row < arr.length; row++) {
			for (int col = 0; col < arr[row].length; col++) {
				System.out.print(arr[row][col] + "\t");
			}
			System.out.println();
		}
		// 주소를 넣는다!! 같은주소를 참조한다.
		String[][] arr2 = arr;
		arr2[0][0] = "JAVA";
		System.out.println(arr2[0][0]); // 같은주소에 값이 변경되었기에 같이 변한다!!
		System.out.println(arr[0][0]);

	}

	private static void method2() {
		// String 2차 배열
		String[][] arr;
		arr = new String[3][]; // [][]중 앞[]은 필수로 적어줘야한다.
		for (int i = 0; i < arr.length; i++) {

			// System.out.println(arr[i]);
			arr[i] = new String[i + 4];
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j]);
			}
			System.out.println();
		}

	}

	private static void method1() {
		// 배열선언
		int[][] arr;
		int arr2[][];
		int[] arr3[];
		// 배열생성
		arr = new int[5][7];
		arr2 = new int[2][];
		arr2[0] = new int[3];
		arr2[1] = new int[4];

//		for(int row =0;row<arr.length;row++) {
//			
//			for(int col=0;col<arr[row].length;col++) {
//				System.out.print(arr[row][col]+" ");
//			}
//			System.out.println(); //줄바꾸기
//		}
		for (int row = 0; row < arr2.length; row++) {

			for (int col = 0; col < arr2[row].length; col++) {
				System.out.print(arr2[row][col] + " ");
			}
			System.out.println(); // 줄바꾸기
		}

//		System.out.println(arr[0][0]);
//		System.out.println(arr[0][1]);
//		System.out.println(arr[0][2]);
////		System.out.println(arr[0][3]); 범위를 넘어섬
//		System.out.println(arr[1][0]);
//		System.out.println(arr[1][1]);
//		System.out.println(arr[1][2]);

	}

}
//2차원 배열문제

package com.kosta.day03;

import java.util.Arrays;

import javax.print.attribute.standard.PrinterName;

public class ArrayTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] arr1= new int[][] {{30,30,30,30},{40,40,40,40},{50,50,50,50}};
		int[][] arr2=  {{1,2,3,4},{5,6,7,8},{9,10,11,12}};
		int[][] arr3=new int[3][4];
		
		//  ArrayTest aa=new ArrayTest(); 다음챕터에 배울것
		
		sub(arr1,arr2,arr3);
		//prn(arr1);
		//prn(arr2);
		prn(arr3);
	}
	//void는 return이 없다
	//나를 호출한 함수로 줄것이 없다.
	public static void sub(int[][] a, int[][] b, int[][] c) { 
		for(int i=0;i<a.length;i++) {
			for(int j=0;j<a[i].length;j++) {
				c[i][j]=a[i][j]-b[i][j];
			}
			
		}
	}
	public static void prn(int[][] a) {
		for(int i=0;i<a.length;i++) {
			for(int j=0;j<a[i].length;j++) {
				System.out.print(a[i][j]+"\t");
			}
			System.out.println();
			
		}
		
	}
}
//문제

package com.kosta.day03;

import java.util.Arrays;
import java.util.Scanner;

//switch 배열 문제
public class Lab {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 문제1. 자신이 태어난 달을 명령행 매개변수로 받아서 어떤 계절에 태어났는지를 출력하는
//		printSeason() 메서드를 구현하시오.
//		(단,  반드시 switch  문을 사용해야 하며 1~12월이 아닌 달을 입력했을 경우 “1~12  사이의숫자만
//		입력하셔야 합니다.”라는 문자를 출력하도록 해야 한다.그리고 주어진 메서드의 시그니쳐는 변경하지 않는다.)
//	(봄: 3, 4, 5월,       여름: 6, 7, 8월,       가을: 9, 10, 11월,        겨울 12, 1, 2월
		exam1(); // 3번문제
		// printSeason(args[0]); //1번문제
		// printSeason2(args[0]); //1번문제
//		abs(args[0],args[1]);		//2번문제
//		Scanner scan =new Scanner(System.in);
//		System.out.println("정수를 입력하시오");
//		int ax=scan.nextInt();
//		System.out.println("정수를 입력하시오");
//		int bx=scan.nextInt();
//		abs1(ax,bx);
//		abs2(args[0],args[1]);
//		문제3. 주어진 일차원 배열의 내용을 오름차순으로 정렬하는 로직을 작성하시오.
//		(단, 로직은 main() 메서드에 작성하고 반드시 이중 for문을 사용하여 구현해야 한다.)			
//		[배열의 내용]
//		3, 24, 1, 55, 17, 43, 5
//		[클래스 실행결과]
//		1, 3, 5, 17, 24, 43, 55		

	}

	private static void abs2(String s1, String s2) {
		// TODO Auto-generated method stub
		int num1 = Integer.parseInt(s1);
		int num2 = Integer.parseInt(s2);
		int result = num1 > num2 ? num1 - num2 : num2 - num1; // 삼항연산자
		System.out.println(result);
	}

	private static void abs1(int ax, int bx) {
		// TODO Auto-generated method stub
		int c = ax - bx;
		if (c < 0) {
			c *= -1;

		}
		System.out.println(c);
	}

	private static void abs(String a, String b) {
		// TODO Auto-generated method stub
		int c = 0;
		int a1 = Integer.parseInt(a);
		int b1 = Integer.parseInt(b);
		c = a1 - b1;
		if (c < 0) {
			c *= -1;
		}
		System.out.println(c);
	}

	private static void printSeason2(String month) {
		// TODO Auto-generated method stub
		// String springString ="봄",summer="여름",fall="가을",winter="겨울";
		String[] message = { "잘못", "겨울", "겨울", "봄", "봄", "봄", "여름", "여름", "여름", "가을", "가을", "가을", "겨울" };
		int mon = Integer.parseInt(month);
		if (mon >= message.length) {
			System.out.println("1~12까지 입력하셔야 합니다.");
		}
		System.out.println(message[mon]);
	}

	private static void printSeason(String month) {
		// TODO Auto-generated method stub
		// TODO Auto-generated method stub
		// 문제1. 자신이 태어난 달을 명령행 매개변수로 받아서 어떤 계절에 태어났는지를 출력하는
//				printSeason() 메서드를 구현하시오.
//				(단,  반드시 switch  문을 사용해야 하며 1~12월이 아닌 달을 입력했을 경우 “1~12  사이의숫자만
//				입력하셔야 합니다.”라는 문자를 출력하도록 해야 한다.그리고 주어진 메서드의 시그니쳐는 변경하지 않는다.)
//			(봄: 3, 4, 5월,       여름: 6, 7, 8월,       가을: 9, 10, 11월,        겨울 12, 1, 2월
//				[명령행 매개변수가 13일 경우]
//						[실행결과]1~12 사이의 숫자만 입력하셔야 합니다

		System.out.println("[명령행 매개변수가 " + month + "일 경우]");
		System.out.println("[실행결과]");
		switch (month) {
		case "3":
		case "4":
		case "5":
			System.out.println("봄.");
			break;
		case "6":
		case "7":
		case "8":
			System.out.println("여름.");
			break;
		case "9":
		case "10":
		case "11":
			System.out.println("가을.");
			break;
		case "12":
		case "1":
		case "2":
			System.out.println("겨울.");
			break;
		default:
			System.out.println("1~12 사이의 숫자만 입력하셔야 합니다");
			return;
		}

	}
	//삽입정렬, 버블정렬
	private static void exam1() {
//		문제3. 주어진 일차원 배열의 내용을 오름차순으로 정렬하는 로직을 작성하시오.
//		(단, 로직은 main() 메서드에 작성하고 반드시 이중 for문을 사용하여 구현해야 한다.)			
//		[배열의 내용]
//		3, 24, 1, 55, 17, 43, 5
//		[클래스 실행결과]
//		1, 3, 5, 17, 24, 43, 55	
		int[] arr = { 3, 24, 1, 55, 17, 43, 5 };
		System.out.println("before: "+ Arrays.toString(arr));
		int temp=0;
		for (int i = 0; i < arr.length - 1; i++) {
			for (int j = i + 1; j < arr.length; j++) {
				if (arr[i] > arr[j]) {
				temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
				}

			}

		}
		System.out.println("after :" +Arrays.toString(arr));
	}
}

//// 열거형
package com.kosta.day03;


import java.util.Calendar;
import java.util.Date;

public class EnumTest {
//열거체!!
//	public static final String SUCCESS = "OK"; // 상수 상수는 대문자로 쓰기!!!
//	public static final String FAIL = "NO"; // 상수
//	public static final String LOGIN = "OK"; // 상수
//상수의 문제점 상수값이 같으면 차이점을 만들수 없다!! 
// 그래서 제약을 걸어야한다. -> 열거를 써야한다
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//method1();
//		method2();
//		method3();
//		System.out.println("*************");
//		Week week1=Week.WEDNESDAY;
//		call(week1);
		method4();
	}

	private static void method4() {
	// TODO Auto-generated method stub
	Date d= new Date();
	System.out.println(d);
	System.out.println(1900+d.getYear());
	
	Calendar cal = Calendar.getInstance();
	System.out.println(cal.get(Calendar.YEAR));
	System.out.println(cal.get(Calendar.MONTH)+1+" 월");
	System.out.println(cal.get(Calendar.DAY_OF_MONTH)+1+" 일");
	System.out.println(cal.get(Calendar.DAY_OF_WEEK)+1+" 요일");
	//1(일),2(월),3(화),4(수),5(목),6(금),7(토)
	call2(cal.get(Calendar.DAY_OF_WEEK));
	
	}
	private static void call2(int i) {
		// TODO Auto-generated method stub
		Week w=null;
		switch(i) {
		case 1:
			w=Week.SUNDAY;break;
		case 2:
			w=Week.MONDAY;break;
		case 3:
			w=Week.TUESDAY;break;
		case 4:
			w=Week.WEDNESDAY;break;
		case 5:
			w=Week.THURSDAY;break;
		case 6:
			w=Week.FRIDAY;break;
		case 7:
			w=Week.SATURDAY;break;
			
		default:
			break;
		}
		call(w);
	}

	private static void call(Week week1) {
		// TODO Auto-generated method stub
		switch(week1) {
		case MONDAY:
			System.out.println("월요일");
			break;
		case TUESDAY:
			System.out.println("화요일");
			break;
		case WEDNESDAY:
			System.out.println("수요일");
			break;
		case THURSDAY:
			System.out.println("목요일");
			break;
		case FRIDAY:
			System.out.println("금요일");
			break;
		case SATURDAY:
			System.out.println("토요일");
			break;
		case SUNDAY:
			System.out.println("일요일");
			break;
			default:
				break;
		}
	}

	private static void method3() {
	// 열거 배열 만들기 예시!! 
	Week week;
	Week[] week1=Week.values();
	for(Week aab:week1) {
		System.out.println(aab);
	}
}

	private static void method2() {
	// 열거 사용
		LoginResult result;  //열거체이름 변수; 
		//result=LoginResult.LOGIN_SUCCESS;
		result=LoginResult.LOGIN_FAIL;
	if(result ==LoginResult.LOGIN_FAIL) {
		System.out.println("로그인실패");
	}
	LoginResult[] arr=	LoginResult.values(); //배열로 들어온다.
	for(LoginResult aa:arr) {
		System.out.println(aa);
	}
}

	private static void method1() {
		// TODO Auto-generated method stub
//		String result = "OK";
//		if (result == SUCCESS) {
//			System.out.println("로그인성공");
//		} else if (result == FAIL) {
//			System.out.println("로그인실패");
//		}
//		else {
//			System.out.println("에러가 발생하였습니다.");
//		}
	}

}
//ENUM 따로만들어야 하는것
package com.kosta.day03;
// 패키지 마우스 오른쪽 new->enum 이름 적고 만든다
public enum LoginResult {
	LOGIN_SUCCESS, LOGIN_FAIL
}
//ENUM 따로만들어야 하는것2
package com.kosta.day03;
//열거형:한정적인 값을 상수로 정의
public enum Week {
MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY,SATURDAY,SUNDAY
}
//열거형 22

package com.kosta.day03;

public class EnumTest2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Week w;
		w = Week.SUNDAY;
		System.out.println(w);
		System.out.println(w == Week.SUNDAY);
		System.out.println(w.ordinal());
		System.out.println(w.name());
		System.out.println(w.name().equals("SUNDAY")); // .equls()문자열비교
		String s=w.name();
		Week ww=Week.valueOf("SUNDAY");
		Week ww2=Week.valueOf("WEDNESDAY");
		System.out.println("차이 : " +ww.compareTo(ww2));//차이 comparTo()함수
		System.out.println(Week.valueOf("SUNDAY"));  //valueOf는 데이터타입으로 써야한다.
		System.out.println("----------SUNDAY절끝");

		// 열거형 안에 들어있는걸 다알고 싶을 때
		Week[] arr = Week.values();
		for (Week aa : arr) {
			System.out.println(aa); // 모든 항목이나온다.
			System.out.println(aa.ordinal()); // 순서가 나온다!!
			System.out.println(aa.name()); // 이름을 알고싶을때 aa.name과 aa는 다르다.
			System.out.println("----------");
		}

	}

}
//// 마지막 문제
package com.kosta.day03;

import java.util.Arrays;
import java.util.Scanner;

public class Exam {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//quiz7();
		//quiz8();
		quiz9();
	}

	private static void quiz9() {
		// TODO Auto-generated method stub
		boolean run=true;
		int studentNum=0;
		int[] scores=null;
		int max =0;
		double avg=0.0;
		int count =0;
		int sum=0;
		Scanner scan = new Scanner(System.in);
		
		while(run) {
			System.out.println("-------------------------------------");
			System.out.println("1.학생수 |2.점수입력|3.점수리스트|4.분석|5.종료");
			System.out.println("-------------------------------------");
			System.out.print("선택>  ");
			int selectNo =scan.nextInt();
			if(selectNo==1) {
				System.out.print("학생수를 입력하세요 :");
				studentNum=scan.nextInt();
			}
			else if(selectNo ==2) {
				
				int[] scores1 =new int[studentNum];
				for(int i =0;i<studentNum;i++) {
					System.out.print("scores["+i+"]>");
					scores1[i]=scan.nextInt();
					count++;
					
				}
				scores=scores1;
			}else if(selectNo ==3) {
				for(int i =0;i<studentNum;i++) {
				System.out.println("scores["+i+"]> "+scores[i]);
				}
			}else if(selectNo==4) {
				for(int i =0;i<studentNum;i++) {
					if(scores[0]<scores[i]) {
						max=scores[i];
					}
					
				sum+=scores[i];
				}
				avg=1.0*sum/count;
				System.out.println("최고점수 : "+max);
				System.out.println("평균점수 : "+avg);
			}else if(selectNo==5) {
				run=false;
			}
		}
		System.out.println("프로그램종료");
	}

	private static void quiz8() {
		// TODO Auto-generated method stub
		int[][] arr = {{95,86},{83,92,96},{78,83,93,87,88}};
		int sum =0;
		double avg=0.0;
		int count=0;
		//향상된 for문을 사용해보자
		for(int[] arr1: arr) {
			for(int su:arr1) {
				sum+=su;
				count++;
				avg=(double)sum/count;
			}
			
		}
		System.out.println(sum);
		System.out.println(avg);
	}

	private static void quiz7() {
		// TODO Auto-generated method stub
		int max=0;
		int[] array = {1,5,3,8,2};
		for(int i=0;i<array.length-1;i++) {
			if(array[i]>array[i+1])
			{
				max=array[i];
			}
			
			
		}
		
		
		System.out.println("max :"+max);
	}

}

