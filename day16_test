//자바 시험  풀이  prob1  
package com.kosta.day17;



public class Prob1 {

	public static void main(String[] args) {
		String[] array={"황남기85점","조성호89점","한인성88점","독고정진77점"};
		printMaxScore(array);

	}

	private static void printMaxScore(String[] array) {
		//구현하세여
		int maxScore=0;
		String maxName="";
		for(String s:array) {
			String strScore="";
			String name="";
			//System.out.println(s);
			for(int i =0;i<s.length();i++) {
				//System.out.println(s.charAt(i));
				char ch= s.charAt(i);
				if(Character.isDigit(ch)) {
			//		System.out.println(ch+" 숫자");
					strScore += ch;
				}else {
				//	System.out.println(ch+"문자");
					name+=ch;
				}
			}
			int score= Integer.parseInt(strScore);
			name=name.substring(0, name.length()-1);
			
			if(maxScore<score) {
				maxScore=score;
				maxName=name;
			}
			
		}
		System.out.println("최고점수는 "+ maxName+ "님" + maxScore+"점 입니다.");
	}

}
package com.kosta.day17;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Prob1_other {

	public static void main(String[] args) {
		String[] array = { "황남기85점", "조성호89점", "한인성88점", "독고정진77점" };
		printMaxScore(array);

	}

	private static void printMaxScore(String[] array) {
		// 구현하세여 ... 정규 표현식
		int maxScore = 0;
		String maxName = "";
		String regExp = "([가-힣]{3,4})([0-9]{2,3})";
		Pattern p = Pattern.compile(regExp);

		for (String s : array) {
			Matcher m = p.matcher(s);

			if (!m.find())
				continue;
			String name = m.group(1);
			int score =Integer.parseInt(m.group(2));
//			System.out.println(name + " " + score);
			if(maxScore<score) {
				maxScore=score;
				maxName=name;
			}
		}
		System.out.println(maxName+ " "+maxScore);
	}

}
//String exp="^([가-힣]{3,4})([0-9]{2,3})[가-힣]";
//String s = "황남기85점";
//Pattern p = Pattern.compile(exp);
//Matcher m =	p.matcher(s);
//System.out.println(m.find());
//System.out.println(m.group(1));
//System.out.println(m.group(2));

//prob2

package com.kosta.day17;

import com.sun.org.apache.bcel.internal.generic.RETURN;

public class Prob2 {

	public static void main(String[] args) {
		System.out.println(leftPad("Samsung",10,'#'));
		System.out.println(leftPad("SDS",5,'*'));
		System.out.println(leftPad("Multicampus",5,'@'));
		
	}

	 

	public static String leftPad(String str, int size, char fillChar){
		//구현하시오.....return값 수정할것 
		try {
		if(str.length()>size) throw new IllegalSizeException("문자열의 길이보다 size가 큽니다."); 
		}catch(IllegalSizeException e) {
			System.out.println(e.getMessage());
			return "";
		}
		int diff=size-str.length();
		String message= "";
		for(int i =0;i<diff;i++) {
			message+=fillChar;
		}
		
		return message+str;
		}
		
	








	
	
}

//구현하시오.
class IllegalSizeException extends Exception {
	 
	IllegalSizeException(String message){
		super(message);
	}
}

//2
package com.kosta.day17;

import java.util.Arrays;

import com.sun.org.apache.bcel.internal.generic.RETURN;
import com.sun.xml.internal.bind.v2.runtime.unmarshaller.XsiNilLoader.Array;

public class Prob2 {

	public static void main(String[] args) {
		System.out.println(leftPad("Samsung",10,'#'));
		System.out.println(leftPad("SDS",5,'*'));
		System.out.println(leftPad("Multicampus",5,'@'));
		
	}

	 

	public static String leftPad(String str, int size, char fillChar){
		//구현하시오.....return값 수정할것 
		try {
		if(str.length()>size) throw new IllegalSizeException("문자열의 길이보다 size가 큽니다."); 
		}catch(IllegalSizeException e) {
			System.out.println(e.getMessage());
			return "";
		}
		int diff=size-str.length();
		String message= "";
		for(int i =0;i<diff;i++) {
			message+=fillChar;
		}
		
		//return message+str;
		String[] arr= new String[diff];
		Arrays.fill(arr, fillChar+"");
		return Arrays.toString(arr).replaceAll("\\[|,| |\\]", "")+str;
		}
		
	








	
	
}

//구현하시오.
class IllegalSizeException extends Exception {
	 
	IllegalSizeException(String message){
		super(message);
	}
}
////Prob3
package com.kosta.day17;



class Prob3 {
	public static void main(String args[]){
		PhoneCharge skt = new PhoneCharge("김현우", 100, 50, 1);
		PhoneCharge ktf = new PhoneCharge("신희만", 200, 100, 2);
		PhoneCharge lgt = new PhoneCharge("조유성", 150, 500, 10);
		skt.printCharge();
		ktf.printCharge();
		lgt.printCharge();
	}
}

class PhoneCharge{	
	//구현하시오.
		private String user;
		private int call;
		private int sms;
		private int data;
		private int total;
		public PhoneCharge(String user, int call, int sms, int data) {
			super();
			this.user = user;
			this.call = call;
			this.sms = sms;
			this.data = data;
		}
		public void printCharge() {
			calcCharage();
			System.out.println(user+" 사용자는 이번달에 사용하신 전화요금이 "+total+"원 입니다.");
			
		}
		public int calcCharage() {
			
			int callFee=call>=200?call*10*2:call*10;
			int smsFee=sms>=300?sms*20*4:sms*20;
			int dataFee=data>=7?data*1000*2:data*1000;
			total=callFee+smsFee+dataFee;
			return total;
		}
		
}
 //Prob4
 package com.kosta.day17;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashSet;

public class Prob4 {

	public static void main(String[] args) {
		Product[] prodList = { new Product("NT450R5E-K24S", 500000, "삼성전자"),
				new Product("15UD340-LX2CK", 400000, "LG전자"), new Product("G2-K3T32AV", 600000, "HP") };
		HashSet product_hs = makeHashSet(prodList, 500000);
		// System.out.println(product_hs); 확인용
		makeFile(product_hs);
		readFile();

	}

	private static HashSet makeHashSet(Product[] prodList, int price) {
		// 구현하시오...return값 수정하기
		HashSet hs = new HashSet();
		for (Product p : prodList) {
			if (p.getPrice() >= price)
				hs.add(p);

		}

		return hs;
	}

	private static void makeFile(HashSet resultList) {
		// 구현하시오.
		String fName = "resultList.dat";
		FileOutputStream fos = null; // 파일을출력해라
		ObjectOutputStream oos = null; // 객체를 출력해라
		try {
			fos = new FileOutputStream(fName);
			oos = new ObjectOutputStream(fos);
			oos.writeObject(resultList); // 객체저장 오브젝트를 저장한것이기에 텍스트가 꺠지는것은 당연
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (fos != null)
					fos.close();
				if (oos != null)
					oos.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	private static void readFile() {
		// 구현하시오.
		String fName = "resultList.dat";
		FileInputStream fi = null; // 파일을 읽으려면 들고와야한다.
		ObjectInputStream ois = null; // 객체를 읽으려면 들고와야한다.

		try {
			fi = new FileInputStream(fName);
			ois = new ObjectInputStream(fi);
			Object obj = ois.readObject();
			System.out.println(obj);
		} catch (IOException | ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}

class Product implements Serializable {
	private String model_name;
	private int price;
	private String company;

	public Product(String model_name, int price, String company) {
		super();
		this.model_name = model_name;
		this.price = price;
		this.company = company;
	}

	public String getModel_name() {
		return model_name;
	}

	public void setModel_name(String model_name) {
		this.model_name = model_name;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	public String getCompany() {
		return company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Override
	public String toString() {
		return "Product [model_name=" + model_name + ", price=" + price + ", company=" + company + "]";
	}

}
/////
package com.kosta.day17;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashSet;

public class Prob4 {

	public static void main(String[] args) {
		Product[] prodList = { new Product("NT450R5E-K24S", 500000, "삼성전자"),
				new Product("15UD340-LX2CK", 400000, "LG전자"), new Product("G2-K3T32AV", 600000, "HP") };
		HashSet product_hs = makeHashSet(prodList, 500000);
		// System.out.println(product_hs); 확인용
		makeFile(product_hs);
		readFile();

	}

	private static HashSet makeHashSet(Product[] prodList, int price) {
		// 구현하시오...return값 수정하기
		HashSet hs = new HashSet();
		for (Product p : prodList) {
			if (p.getPrice() >= price)
			{		System.out.println(p);
				hs.add(p);
			}
		}
	
		System.out.println("===================================================================");
		return hs;
	}

	private static void makeFile(HashSet resultList) {
		// 구현하시오.
		String fName = "resultList.dat";
		FileOutputStream fos = null; // 파일을출력해라
		ObjectOutputStream oos = null; // 객체를 출력해라
		try {
			fos = new FileOutputStream(fName);
			oos = new ObjectOutputStream(fos);
			for(Object obj:resultList) {
				oos.writeObject(obj); // 객체저장 오브젝트를 저장한것이기에 텍스트가 꺠지는것은 당연
			}
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if (fos != null)
					fos.close();
				if (oos != null)
					oos.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	private static void readFile() {
		// 구현하시오.
		String fName = "resultList.dat";
		FileInputStream fi = null; // 파일을 읽으려면 들고와야한다.
		ObjectInputStream ois = null; // 객체를 읽으려면 들고와야한다.

		try {
			fi = new FileInputStream(fName);
			ois = new ObjectInputStream(fi);
			while(true) {
				Object obj = ois.readObject();
				if(obj == null) break;
				System.out.println(obj);
			}
		} catch(EOFException e) {
			
		}
		catch (IOException | ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}

class Product implements Serializable {
	private String model_name;
	private int price;
	private String company;

	public Product(String model_name, int price, String company) {
		super();
		this.model_name = model_name;
		this.price = price;
		this.company = company;
	}

	public String getModel_name() {
		return model_name;
	}

	public void setModel_name(String model_name) {
		this.model_name = model_name;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	public String getCompany() {
		return company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Override
	public String toString() {
		return "Product [model_name=" + model_name + ", price=" + price + ", company=" + company + "]";
	}

}

Prob5
package com.kosta.day16;

import java.util.Arrays;

public class Prob5 {
	public static void main(String[] args) {
		int[] answer = { 1, 4, 4, 3, 1, 4, 4, 2, 1, 3, 2 };
		int[] counter = new int[4];

		// 구현하시오 - 숫자들의 개수를 세어 저장하는 코드를 작성한다.
		for (int num : answer) {
			switch (num) {
			case 1:
				counter[0]++;
				break;
			case 2:
				counter[1]++;
				break;
			case 3:
				counter[2]++;
				break;
			case 4:
				counter[3]++;
				break;
			default:
				break;
			}
			
		}
		for(int i =0; i<counter.length;i++) {
			System.out.println((i+1)+"의 갯수는 "+counter[i]+"개 입니다.");
		}
	}
}
/*
 * 1의 갯수는 3개 입니다. 2의 갯수는 2개 입니다. 3의 갯수는 2개 입니다. 4의 갯수는 4개 입니다.
 * 
 */
 package com.kosta.day16;

import java.util.Arrays;

public class Prob5 {
	public static void main(String[] args) {
		int[] answer = { 1, 4, 4, 3, 1, 4, 4, 2, 1, 3, 2 };
		int[] counter = new int[4];

		// 구현하시오 - 숫자들의 개수를 세어 저장하는 코드를 작성한다.
		for (int num : answer) {
			counter[num-1]++;
			
			
		}
		for(int i =0; i<counter.length;i++) {
			System.out.println((i+1)+"의 갯수는 "+counter[i]+"개 입니다.");
		}
	}
}
/*
 * 1의 갯수는 3개 입니다. 2의 갯수는 2개 입니다. 3의 갯수는 2개 입니다. 4의 갯수는 4개 입니다.
 * 
 */
///










